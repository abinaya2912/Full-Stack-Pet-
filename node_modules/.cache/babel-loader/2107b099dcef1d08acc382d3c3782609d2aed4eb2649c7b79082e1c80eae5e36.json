{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Logout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const [showConfirmation, setShowConfirmation] = useState(true); // Automatically show the confirmation popup\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // Toggle for success message\n  const navigate = useNavigate(); // React Router's navigate function\n\n  // Handle logout action if the user clicks \"Yes\"\n  const handleYes = () => {\n    // Clear authentication data from localStorage and sessionStorage\n    localStorage.removeItem('authToken');\n    sessionStorage.removeItem('authToken');\n\n    // Show success message\n    setShowSuccessMessage(true);\n\n    // Redirect to home page after 2 seconds to give the user time to see the success message\n    setTimeout(() => {\n      navigate('/'); // Redirect to home\n    }, 2000);\n  };\n\n  // Handle \"No\" click to stay on the page\n  const handleNo = () => {\n    setShowConfirmation(false); // Hide confirmation popup\n    navigate('/home'); // Redirect to home page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-container\",\n      children: [showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Do you want to logout from this website?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleYes,\n            className: \"yes-btn\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNo,\n            className: \"no-btn\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have successfully logged out!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"7BcQijBjUQPn4ul6x2eMKKzAsKw=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Logout","_s","showConfirmation","setShowConfirmation","showSuccessMessage","setShowSuccessMessage","navigate","handleYes","localStorage","removeItem","sessionStorage","setTimeout","handleNo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/Logout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Logout.css';\r\n\r\nconst Logout = () => {\r\n  const [showConfirmation, setShowConfirmation] = useState(true); // Automatically show the confirmation popup\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // Toggle for success message\r\n  const navigate = useNavigate(); // React Router's navigate function\r\n\r\n  // Handle logout action if the user clicks \"Yes\"\r\n  const handleYes = () => {\r\n    // Clear authentication data from localStorage and sessionStorage\r\n    localStorage.removeItem('authToken');\r\n    sessionStorage.removeItem('authToken');\r\n\r\n    // Show success message\r\n    setShowSuccessMessage(true);\r\n\r\n    // Redirect to home page after 2 seconds to give the user time to see the success message\r\n    setTimeout(() => {\r\n      navigate('/'); // Redirect to home\r\n    }, 2000);\r\n  };\r\n\r\n  // Handle \"No\" click to stay on the page\r\n  const handleNo = () => {\r\n    setShowConfirmation(false); // Hide confirmation popup\r\n    navigate('/home'); // Redirect to home page\r\n  };\r\n\r\n  return (\r\n    <div className=\"log-background\">\r\n      <div className=\"logout-container\">\r\n        {/* Confirmation message with Yes/No options */}\r\n        {showConfirmation && (\r\n          <div className=\"confirmation-popup\">\r\n            <h2>Do you want to logout from this website?</h2>\r\n            <div className=\"confirmation-buttons\">\r\n              <button onClick={handleYes} className=\"yes-btn\">Yes</button>\r\n              <button onClick={handleNo} className=\"no-btn\">No</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Success message displayed after logout */}\r\n        {showSuccessMessage && (\r\n          <div className=\"success-message\">\r\n            <p>You have successfully logged out!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrE,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;IACpCC,cAAc,CAACD,UAAU,CAAC,WAAW,CAAC;;IAEtC;IACAJ,qBAAqB,CAAC,IAAI,CAAC;;IAE3B;IACAM,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrBT,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5BG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bf,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAE9BZ,gBAAgB,iBACfH,OAAA;QAAKc,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCf,OAAA;UAAAe,QAAA,EAAI;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDnB,OAAA;UAAKc,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnCf,OAAA;YAAQoB,OAAO,EAAEZ,SAAU;YAACM,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5DnB,OAAA;YAAQoB,OAAO,EAAEP,QAAS;YAACC,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGAd,kBAAkB,iBACjBL,OAAA;QAAKc,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9Bf,OAAA;UAAAe,QAAA,EAAG;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjDID,MAAM;EAAA,QAGOH,WAAW;AAAA;AAAAuB,EAAA,GAHxBpB,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\AdminRequests.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './adminrequest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [pets, setPets] = useState({}); // To store pet details by ID\n\n  // Fetch requests for the admin page\n  useEffect(() => {\n    const fetchRequests = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/getrequests');\n        const requestData = response.data;\n        setRequests(requestData);\n\n        // Fetch pet details for each request\n        const petIds = requestData.map(request => request.petId);\n        const petResponse = await axios.get('http://localhost:5000/getpetlist', {\n          params: {\n            ids: petIds.join(',')\n          } // Send petIds as a comma-separated list\n        });\n\n        // Map pet details by ID\n        const petDetails = petResponse.data.reduce((acc, pet) => {\n          acc[pet._id] = pet;\n          return acc;\n        }, {});\n        setPets(petDetails);\n      } catch (error) {\n        console.error('Error fetching requests:', error.message);\n      }\n    };\n    fetchRequests();\n  }, []);\n  const handleSendEmail = async (userEmail, petName) => {\n    const subject = `Request for Pet: ${petName}`;\n    const text = `Hello, we have received a request for the pet named ${petName}.`;\n    try {\n      await axios.post('http://localhost:5000/send-mail', {\n        userEmail,\n        petname\n      });\n      alert('Email sent successfully');\n    } catch (error) {\n      console.error('Error sending email:', error);\n      alert('Error sending email');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-requests-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"requests-list\",\n      children: requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No requests available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pet-image-container\",\n          children: pets[request.petId] && pets[request.petId].image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/uploads/${pets[request.petId].image.replace('E:\\\\project\\\\pet-platform\\\\pet\\\\backend\\\\pet-platform\\\\pet\\\\public\\\\uploads\\\\', '')}`,\n            alt: pets[request.petId].name,\n            className: \"pet-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [request.name, \" requested for pet:\", pets[request.petId] ? pets[request.petId].name : 'Loading...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact: \", request.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", request.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _pets$request$petId;\n            return handleSendEmail(request.email, (_pets$request$petId = pets[request.petId]) === null || _pets$request$petId === void 0 ? void 0 : _pets$request$petId.name);\n          },\n          children: \"Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminRequests, \"JnpRgkv3L1TVgxNu8URqEQMXl3I=\");\n_c = AdminRequests;\nexport default AdminRequests;\nvar _c;\n$RefreshReg$(_c, \"AdminRequests\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminRequests","_s","requests","setRequests","pets","setPets","fetchRequests","response","get","requestData","data","petIds","map","request","petId","petResponse","params","ids","join","petDetails","reduce","acc","pet","_id","error","console","message","handleSendEmail","userEmail","petName","subject","text","post","petname","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","image","src","replace","alt","name","contact","email","onClick","_pets$request$petId","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/AdminRequests.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './adminrequest.css';\r\n\r\nconst AdminRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [pets, setPets] = useState({}); // To store pet details by ID\r\n\r\n  // Fetch requests for the admin page\r\n  useEffect(() => {\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/getrequests');\r\n        const requestData = response.data;\r\n        setRequests(requestData);\r\n\r\n        // Fetch pet details for each request\r\n        const petIds = requestData.map(request => request.petId);\r\n        const petResponse = await axios.get('http://localhost:5000/getpetlist', {\r\n          params: { ids: petIds.join(',') } // Send petIds as a comma-separated list\r\n        });\r\n\r\n        // Map pet details by ID\r\n        const petDetails = petResponse.data.reduce((acc, pet) => {\r\n          acc[pet._id] = pet;\r\n          return acc;\r\n        }, {});\r\n\r\n        setPets(petDetails);\r\n      } catch (error) {\r\n        console.error('Error fetching requests:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, []);\r\n  const handleSendEmail = async (userEmail, petName) => {\r\n    const subject = `Request for Pet: ${petName}`;\r\n    const text = `Hello, we have received a request for the pet named ${petName}.`;\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/send-mail', {\r\n        userEmail,\r\n        petname,\r\n      });\r\n      alert('Email sent successfully');\r\n    } catch (error) {\r\n      console.error('Error sending email:', error);\r\n      alert('Error sending email');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin-requests-page\">\r\n      <h2>All Requests</h2>\r\n      <div className=\"requests-list\">\r\n        {requests.length === 0 ? (\r\n          <p>No requests available</p>\r\n        ) : (\r\n          requests.map((request) => (\r\n            <div key={request._id} className=\"request-item\">\r\n              <div className=\"pet-image-container\">\r\n                {/* Display the pet image */}\r\n                {pets[request.petId] && pets[request.petId].image && (\r\n                  <img \r\n                    src={`http://localhost:5000/uploads/${pets[request.petId].image.replace('E:\\\\project\\\\pet-platform\\\\pet\\\\backend\\\\pet-platform\\\\pet\\\\public\\\\uploads\\\\', '')}`} \r\n                    alt={pets[request.petId].name} \r\n                    className=\"pet-image\" \r\n                  />\r\n                )}\r\n              </div>\r\n              <h3>\r\n                {request.name} requested for pet: \r\n                {pets[request.petId] ? pets[request.petId].name : 'Loading...'}\r\n              </h3>\r\n              <p>Contact: {request.contact}</p>\r\n              <p>Email: {request.email}</p> {/* Display email */}\r\n              <button\r\n                onClick={() => handleSendEmail(request.email, pets[request.petId]?.name)}\r\n              >\r\n                Send Email\r\n              </button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
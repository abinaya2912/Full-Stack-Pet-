{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Logout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const [showConfirmation, setShowConfirmation] = useState(false); // Toggle for the confirmation popup\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // Toggle for success message\n  const navigate = useNavigate(); // React Router's navigate function\n\n  // Handle the initial logout click\n  const handleLogoutClick = () => {\n    setShowConfirmation(true); // Show the confirmation popup\n  };\n\n  // Confirm logout and perform logout action\n  const handleYes = () => {\n    // Clear authentication data from localStorage and sessionStorage\n    localStorage.removeItem('authToken');\n    sessionStorage.removeItem('authToken');\n\n    // Show success message\n    setShowSuccessMessage(true);\n\n    // Redirect to home page after 2 seconds to give the user time to see the success message\n    setTimeout(() => {\n      navigate('/'); // Redirect to home\n    }, 2000);\n  };\n\n  // Cancel logout and hide the confirmation popup\n  const handleNo = () => {\n    setShowConfirmation(false); // Hide the confirmation popup\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: [showConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Do you want to logout from this website?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleYes,\n          className: \"yes-btn\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNo,\n          className: \"no-btn\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Show the logout button if confirmation is not visible\n    _jsxDEV(\"button\", {\n      onClick: handleLogoutClick,\n      className: \"logout-btn\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have successfully logged out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"cPrufp8wEwhjwsUUGLBZ1uRX8ns=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Logout","_s","showConfirmation","setShowConfirmation","showSuccessMessage","setShowSuccessMessage","navigate","handleLogoutClick","handleYes","localStorage","removeItem","sessionStorage","setTimeout","handleNo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/Logout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Logout.css';\r\n\r\nconst Logout = () => {\r\n  const [showConfirmation, setShowConfirmation] = useState(false); // Toggle for the confirmation popup\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // Toggle for success message\r\n  const navigate = useNavigate(); // React Router's navigate function\r\n\r\n  // Handle the initial logout click\r\n  const handleLogoutClick = () => {\r\n    setShowConfirmation(true); // Show the confirmation popup\r\n  };\r\n\r\n  // Confirm logout and perform logout action\r\n  const handleYes = () => {\r\n    // Clear authentication data from localStorage and sessionStorage\r\n    localStorage.removeItem('authToken');\r\n    sessionStorage.removeItem('authToken');\r\n\r\n    // Show success message\r\n    setShowSuccessMessage(true);\r\n\r\n    // Redirect to home page after 2 seconds to give the user time to see the success message\r\n    setTimeout(() => {\r\n      navigate('/'); // Redirect to home\r\n    }, 2000);\r\n  };\r\n\r\n  // Cancel logout and hide the confirmation popup\r\n  const handleNo = () => {\r\n    setShowConfirmation(false); // Hide the confirmation popup\r\n  };\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n      {/* Show confirmation popup if showConfirmation is true */}\r\n      {showConfirmation ? (\r\n        <div className=\"confirmation-popup\">\r\n          <h2>Do you want to logout from this website?</h2>\r\n          <div className=\"confirmation-buttons\">\r\n            <button onClick={handleYes} className=\"yes-btn\">Yes</button>\r\n            <button onClick={handleNo} className=\"no-btn\">No</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // Show the logout button if confirmation is not visible\r\n        <button onClick={handleLogoutClick} className=\"logout-btn\">Logout</button>\r\n      )}\r\n\r\n      {/* Show success message after logout */}\r\n      {showSuccessMessage && (\r\n        <div className=\"success-message\">\r\n          <p>You have successfully logged out!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
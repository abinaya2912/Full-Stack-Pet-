{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\PetList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for routing\nimport './Pet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetList = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedType, setSelectedType] = useState(''); // For filtering by type (Dogs, Cats, Birds)\n  const navigate = useNavigate(); // Use navigate hook for programmatic navigation\n\n  // Fetch pets from the server based on filters (search query and type)\n  useEffect(() => {\n    const fetchPets = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/petlist', {\n          params: {\n            search: searchQuery,\n            type: selectedType // Send selected type for filtering\n          }\n        });\n        setPets(response.data); // Store the fetched pets in state\n      } catch (error) {\n        console.error('Error fetching pets:', error.message);\n      }\n    };\n    fetchPets();\n  }, [searchQuery, selectedType]); // Re-fetch data when filters change\n\n  // Handle the \"Request\" button click\n  const handleRequestClick = petId => {\n    // Redirect to the Request page with the pet's id as a query parameter\n    navigate(`/request/${petId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pet-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search pets by name\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dog\",\n            children: \"Dog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cat\",\n            children: \"Cat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bird\",\n            children: \"Bird\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-container\",\n      children: pets.length > 0 ? pets.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", pet.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", pet.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", pet.breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), pet.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pet-item-image\",\n          src: `http://localhost:5000/uploads/${pet.image.replace('E:\\\\project\\\\pet-platform\\\\pet\\\\backend\\\\pet-platform\\\\pet\\\\public\\\\uploads\\\\', '')}` // Strip the absolute path and leave the relative part\n          ,\n          alt: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRequestClick(pet._id),\n          children: \"Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), \" \"]\n      }, pet._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pets found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PetList, \"ZypKD8pRhFKKfL7nBl1fJcq2ktA=\", false, function () {\n  return [useNavigate];\n});\n_c = PetList;\nexport default PetList;\nvar _c;\n$RefreshReg$(_c, \"PetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","PetList","_s","pets","setPets","searchQuery","setSearchQuery","selectedType","setSelectedType","navigate","fetchPets","response","get","params","search","type","data","error","console","message","handleRequestClick","petId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","length","map","pet","name","age","breed","image","src","replace","alt","onClick","_id","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/PetList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate for routing\r\nimport './Pet.css';\r\n\r\nconst PetList = () => {\r\n  const [pets, setPets] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedType, setSelectedType] = useState(''); // For filtering by type (Dogs, Cats, Birds)\r\n  const navigate = useNavigate(); // Use navigate hook for programmatic navigation\r\n\r\n  // Fetch pets from the server based on filters (search query and type)\r\n  useEffect(() => {\r\n    const fetchPets = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/petlist', {\r\n          params: {\r\n            search: searchQuery,\r\n            type: selectedType, // Send selected type for filtering\r\n          },\r\n        });\r\n        setPets(response.data); // Store the fetched pets in state\r\n      } catch (error) {\r\n        console.error('Error fetching pets:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchPets();\r\n  }, [searchQuery, selectedType]); // Re-fetch data when filters change\r\n\r\n  // Handle the \"Request\" button click\r\n  const handleRequestClick = (petId) => {\r\n    // Redirect to the Request page with the pet's id as a query parameter\r\n    navigate(`/request/${petId}`);\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"pet-list-container\">\r\n      <h2>Pet List</h2>\r\n\r\n      {/* Search and Type Selector */}\r\n      <div className=\"search-category-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search pets by name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n\r\n        <div className=\"type-selector\">\r\n          <label>Type: </label>\r\n          <select value={selectedType} onChange={(e) => setSelectedType(e.target.value)}>\r\n            <option value=\"\">All</option>\r\n            <option value=\"Dog\">Dog</option>\r\n            <option value=\"Cat\">Cat</option>\r\n            <option value=\"Bird\">Bird</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Display filtered pets */}\r\n      <div className=\"pet-container\">\r\n        {pets.length > 0 ? (\r\n          pets.map((pet) => (\r\n            <div className=\"pet-item\" key={pet._id}>\r\n              <h3>{pet.name}</h3>\r\n              <p>Age: {pet.age}</p>\r\n              <p>Type: {pet.type}</p>\r\n              <p>Breed: {pet.breed}</p>\r\n              {pet.image && (\r\n                <img\r\n                  className=\"pet-item-image\"\r\n                  src={`http://localhost:5000/uploads/${pet.image.replace('E:\\\\project\\\\pet-platform\\\\pet\\\\backend\\\\pet-platform\\\\pet\\\\public\\\\uploads\\\\', '')}`}  // Strip the absolute path and leave the relative part\r\n                  alt={pet.name}\r\n                />\r\n              )}\r\n              <button onClick={() => handleRequestClick(pet._id)}>Request</button> {/* Request button */}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No pets found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
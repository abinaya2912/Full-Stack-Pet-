{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\AdminRequests.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './adminrequest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [pets, setPets] = useState({}); // To store pet details by ID\n\n  // Fetch requests for the admin page\n  useEffect(() => {\n    const fetchRequests = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/getrequests');\n        const requestData = response.data;\n        setRequests(requestData);\n\n        // Fetch pet details for each request\n        const petIds = requestData.map(request => request.petId);\n        const petResponse = await axios.get('http://localhost:5000/getpetlist', {\n          params: {\n            ids: petIds.join(',')\n          } // Send petIds as a comma-separated list\n        });\n\n        // Map pet details by ID\n        const petDetails = petResponse.data.reduce((acc, pet) => {\n          acc[pet._id] = pet;\n          return acc;\n        }, {});\n        setPets(petDetails);\n        console.log(pets);\n      } catch (error) {\n        console.error('Error fetching requests:', error.message);\n      }\n    };\n    fetchRequests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-requests-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"requests-list\",\n      children: requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No requests available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pet-image-container\",\n          children: pets[request.petId] && pets[request.petId].image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pets[request.petId].image,\n            alt: pets[request.petId].name,\n            className: \"pet-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pet-placeholder\",\n            children: \"No Image Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [request.name, \" requested for pet:\", pets[request.petId] ? pets[request.petId].name : 'Loading...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact: \", request.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", request.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), request.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", request.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminRequests, \"JnpRgkv3L1TVgxNu8URqEQMXl3I=\");\n_c = AdminRequests;\nexport default AdminRequests;\nvar _c;\n$RefreshReg$(_c, \"AdminRequests\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminRequests","_s","requests","setRequests","pets","setPets","fetchRequests","response","get","requestData","data","petIds","map","request","petId","petResponse","params","ids","join","petDetails","reduce","acc","pet","_id","console","log","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","image","src","alt","name","contact","email","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/AdminRequests.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './adminrequest.css';\r\n\r\nconst AdminRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [pets, setPets] = useState({}); // To store pet details by ID\r\n\r\n  // Fetch requests for the admin page\r\n  useEffect(() => {\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/getrequests');\r\n        const requestData = response.data;\r\n        setRequests(requestData);\r\n\r\n        // Fetch pet details for each request\r\n        const petIds = requestData.map(request => request.petId);\r\n        const petResponse = await axios.get('http://localhost:5000/getpetlist', {\r\n          params: { ids: petIds.join(',') } // Send petIds as a comma-separated list\r\n        });\r\n\r\n        // Map pet details by ID\r\n        const petDetails = petResponse.data.reduce((acc, pet) => {\r\n          acc[pet._id] = pet;\r\n          return acc;\r\n        }, {});\r\n\r\n        setPets(petDetails);\r\n        console.log(pets)\r\n      } catch (error) {\r\n        console.error('Error fetching requests:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-requests-page\">\r\n      <h2>All Requests</h2>\r\n      <div className=\"requests-list\">\r\n        {requests.length === 0 ? (\r\n          <p>No requests available</p>\r\n        ) : (\r\n          requests.map((request) => (\r\n            <div key={request._id} className=\"request-item\">\r\n              <div className=\"pet-image-container\">\r\n                {pets[request.petId] && pets[request.petId].image ? (\r\n                  <img\r\n                    src={pets[request.petId].image}\r\n                    alt={pets[request.petId].name}\r\n                    className=\"pet-image\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"pet-placeholder\">No Image Available</div>\r\n                )}\r\n              </div>\r\n              <h3>{request.name} requested for pet: \r\n                {pets[request.petId] ? pets[request.petId].name : 'Loading...'}\r\n              </h3>\r\n              <p>Contact: {request.contact}</p>\r\n              <p>Message: {request.message}</p>\r\n              {/* Display email if available */}\r\n              {request.email && <p>Email: {request.email}</p>}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
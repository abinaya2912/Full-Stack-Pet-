{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\pet-platform\\\\pet\\\\src\\\\PetList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Pet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetList = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n\n  // Fetch pets from the server\n  useEffect(() => {\n    const fetchPets = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/pets');\n        setPets(response.data); // Store the fetched pets in state\n      } catch (error) {\n        console.error('Error fetching pets:', error.message);\n      }\n    };\n    fetchPets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", pet.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", pet.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", pet.breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), pet.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${pet.image}`,\n          alt: pet.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this)]\n      }, pet._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PetList, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c = PetList;\nexport default PetList;\nvar _c;\n$RefreshReg$(_c, \"PetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PetList","_s","pets","setPets","fetchPets","response","get","data","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","name","age","type","breed","image","src","alt","width","_id","_c","$RefreshReg$"],"sources":["E:/project/pet-platform/pet/src/PetList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Pet.css';\r\n\r\nconst PetList = () => {\r\n  const [pets, setPets] = useState([]);\r\n\r\n  // Fetch pets from the server\r\n  useEffect(() => {\r\n    const fetchPets = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/pets');\r\n        setPets(response.data); // Store the fetched pets in state\r\n      } catch (error) {\r\n        console.error('Error fetching pets:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchPets();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Pet List</h2>\r\n      <ul>\r\n        {pets.map((pet) => (\r\n          <li key={pet._id}>\r\n            <h3>{pet.name}</h3>\r\n            <p>Age: {pet.age}</p>\r\n            <p>Type: {pet.type}</p>\r\n            <p>Breed: {pet.breed}</p>\r\n            {pet.image && <img src={`http://localhost:5000/${pet.image}`} alt={pet.name} width=\"100\" />}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;QAC9DH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhB,OAAA;MAAAY,QAAA,EACGT,IAAI,CAACc,GAAG,CAAEC,GAAG,iBACZlB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,EAAKM,GAAG,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBhB,OAAA;UAAAY,QAAA,GAAG,OAAK,EAACM,GAAG,CAACE,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhB,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACM,GAAG,CAACG,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBhB,OAAA;UAAAY,QAAA,GAAG,SAAO,EAACM,GAAG,CAACI,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBE,GAAG,CAACK,KAAK,iBAAIvB,OAAA;UAAKwB,GAAG,EAAE,yBAAyBN,GAAG,CAACK,KAAK,EAAG;UAACE,GAAG,EAAEP,GAAG,CAACC,IAAK;UAACO,KAAK,EAAC;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GALpFE,GAAG,CAACS,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}